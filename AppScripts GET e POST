// Variáveis globais para armazenar o ID e o nome da planilha
var spreadsheetId = '1f44YtgYdsDUM7dSzsNA1WixkHJ7GxQw_0U6m53ej--M';
var sheetName = 'Eventos';

// Função para lidar com solicitações POST
function doPost(e) {
  var sheet = SpreadsheetApp.openById(spreadsheetId).getSheetByName(sheetName);

  // Converte os dados do corpo da solicitação para um objeto JSON
  var postData = JSON.parse(e.postData.contents);

  // Extrai os valores dos cabeçalhos da planilha
  var headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0];

  // Cria uma nova linha com os dados do novo evento
  var newRow = [];
  headers.forEach(function(header) {
    newRow.push(postData[header] || ''); // Se o cabeçalho não existir no corpo da solicitação, adiciona uma string vazia
  });

  // Adiciona a nova linha à planilha
  sheet.appendRow(newRow);

  // Retorna uma resposta indicando que o evento foi adicionado com sucesso
  var response = {
    success: true,
    message: 'Novo evento adicionado com sucesso'
  };

  return ContentService.createTextOutput(JSON.stringify(response)).setMimeType(ContentService.MimeType.JSON);
}

// Função para lidar com solicitações GET
function doGet(e) {
  var sheet = SpreadsheetApp.openById(spreadsheetId).getSheetByName(sheetName);
  var values = sheet.getDataRange().getValues();

  var headers = values[0]; // Cabeçalhos da planilha
  var data = [];

  for (var i = 1; i < values.length; i++) {
    var row = values[i];
    if (row.some(cell => cell !== "")) { // Verifica se a linha contém dados
      var rowData = {};
      for (var j = 0; j < headers.length; j++) {
        rowData[headers[j]] = row[j];
      }
      data.push(rowData);
    }
  }

  var jsonResponse = JSON.stringify(data);
  return ContentService.createTextOutput(jsonResponse).setMimeType(ContentService.MimeType.JSON);
}
